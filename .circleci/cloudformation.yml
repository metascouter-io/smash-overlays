AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deployment for the Smash overlay'
Outputs:
  SmashCDNLocation:
    Description: 'The domain of the CDN'
    Value: !GetAtt CDN.DomainName
    Export:
      Name: 'SmashCDNLocation'
Parameters:
  AppName: 
    Type: String
    Default: 'smash-overlays'
    Description: 'Name of the application'
  DomainName: 
    Type: String
    Default:  'smash-overlays.metascouter.gg'
    Description: 'Domain name of the frontend app'

Resources:
  CDN:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        HttpVersion: 'http2'
        CustomErrorResponses:
          - ErrorCachingMinTTL: 300
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCachingMinTTL: 300
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - 'GET'
            - 'HEAD'
          Compress: true
          TargetOriginId: 'smash-overlay-origin'
          ViewerProtocolPolicy: 'redirect-to-https'
          ForwardedValues:
            QueryString: false # Wont cache on query string parameters
            Cookies: 
              Forward: 'none'
        DefaultRootObject: 'index.html'
        Enabled: 'true'
        Origins:
          - Id: 'smash-overlay-origin'
            DomainName: !GetAtt StorageBucket.DomainName
            S3OriginConfig:
              OriginAccessIdentity: 
                Fn::Join:
                  - ''
                  - 
                    - 'origin-access-identity/cloudfront/'
                    - !Ref OriginAccessIdentity
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          MinimumProtocolVersion: 'TLSv1.1_2016'
          SslSupportMethod: 'sni-only'
  Certificate:
    Type: 'AWS::CertificateManager::Certificate'
    Properties:
      DomainName: !Ref DomainName
      #SubjectAlternativeNames:
      #  - Fn::Join:
      #    - ''
      #    - 
      #      - 'www.'
      #      - !Ref DomainName
      ValidationMethod: 'DNS'
      Tags:
        - Key: AppName
          Value: !Ref AppName
  StorageBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      Tags:
        - Key: AppName
          Value: !Ref AppName
      BucketName: !Ref DomainName
      WebsiteConfiguration:
        IndexDocument: 'index.html'
  StorageBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref StorageBucket
      PolicyDocument:
        Statement:
          - Sid: 'Allow access for CloudFront distribution'
            Effect: 'Allow'
            Action: 's3:GetObject'
            Resource: 
              Fn::Join:
                - ''
                -
                  - 'arn:aws:s3:::'
                  - !Ref StorageBucket
                  - '/*'
            Principal:
              CanonicalUser: !GetAtt OriginAccessIdentity.S3CanonicalUserId
  OriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'metascouter-frontend OAI'
